{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAUC,GACjB,OAAOH,EAAAI,OAAOC,QAAQF,E,CAGxB,SAASG,EAASH,GAChB,OAAOH,EAAAI,OAAOG,QAAQJ,E,CAGxB,SAASK,EAAcC,EAAUC,EAAOC,GACtC,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAOL,EAAQD,EAAWE,EAAOA,EAGvC,OAFAK,QAAQC,IAAIR,EAAUM,GAEf,IAAIG,SAAQ,CAACC,EAASC,KAC3BC,YAAW,IACLT,EACKO,EAAQ,uBAAqBV,QAAiBM,KAE9CK,EAAO,sBAAoBX,QAAeM,MAElDA,EAAK,G,CAvCGO,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBAEF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,QAC1BC,EAAS,GAEfH,EAASI,SAAQ,CAACC,EAAOC,IAAUH,EAAOG,GAAQC,OAAOF,KACzDhB,QAAQC,IAAI,WAAYa,GACxB,MAAMpB,MAAEA,EAAKC,KAAEA,EAAIwB,OAAEA,GAAWL,EAEhC,IAAK,IAAIrB,EAAW,EAAGA,GAAY0B,EAAQ1B,GAAY,EACrDD,EAAcC,EAAUC,EAAOC,GAAMyB,KAAKlC,EAAWI,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const formData = new FormData(e.target);\n  const result = {};\n\n  formData.forEach((value, name) => (result[name] = Number(value)));\n  console.log('fomdata:', result);\n  const { delay, step, amount } = result;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay, step).then(onResolve, onReject);\n  }\n}\n\nfunction onResolve(text) {\n  return Notify.success(text);\n}\n\nfunction onReject(text) {\n  return Notify.failure(text);\n}\n\nfunction createPromise(position, delay, step) {\n  const shouldResolve = Math.random() > 0.3;\n  const time = delay + position * step - step;\n  console.log(position, time);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        return resolve(`✅ Fulfilled promise ${position} in ${time}`);\n      } else {\n        return reject(`❌ Rejected promise ${position} in ${time}`);\n      }\n    }, time);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$onResolve","text","Notify","success","$47d4ff9957288465$var$onReject","failure","$47d4ff9957288465$var$createPromise","position","delay","step","shouldResolve","Math","random","time","console","log","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","formData","FormData","target","result","forEach","value","name","Number","amount","then"],"version":3,"file":"03-promises.3f6ab787.js.map"}