{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAGtC,OAFAC,QAAQC,IAAI,aAAaN,YAAmBC,KAErC,IAAIM,SAAQ,CAACC,EAASC,KAC3BC,YAAW,IACLR,EACKM,EAAQ,C,SAAER,E,MAAUC,IAEpBQ,EAAO,C,SAAET,E,MAAUC,KAE3BA,EAAM,G,CAIb,SAASU,GAAUX,SAAEA,EAAQC,MAAEA,IAC7B,OAAOJ,EAAAe,OAAOC,QAAQ,uBAAqBb,QAAiBC,IAASa,E,CAGvE,SAASC,GAAQf,SAAEA,EAAQC,MAAEA,IAC3B,OAAOJ,EAAAe,OAAOI,QAAQ,sBAAoBhB,QAAeC,IAASa,E,CAvCrDG,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBAEF,MAAMC,EAAS,GACE,IAAIC,SAASH,EAAEI,QACvBC,SAAQ,CAACC,EAAOC,IAAUL,EAAOK,GAAQC,OAAOF,KACzDrB,QAAQC,IAAI,WAAYgB,GACxB,MAAMrB,MAAEA,EAAK4B,KAAEA,EAAIC,OAAEA,GAAWR,EAEhC,IAAK,IAAItB,EAAW,EAAGA,GAAY8B,EAAQ9B,GAAY,EAAG,CAExDD,EAAcC,EADOC,GAASD,EAAW6B,EAAOA,IACVE,KAAKpB,GAAWqB,MAAMjB,E,KA2BhE,MAAMD,EAAM,CACVmB,QAAS,IACTC,SAAU,OACVC,qBAAsB,IACtBC,kBAAmB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const result = {};\n  const formData = new FormData(e.target);\n  formData.forEach((value, name) => (result[name] = Number(value)));\n  console.log('fomdata:', result);\n  const { delay, step, amount } = result;\n\n  for (let position = 1; position <= amount; position += 1) {\n    const currentDelay = delay + (position * step - step);\n    createPromise(position, currentDelay).then(onResolve).catch(onCatch);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(`position: ${position} delay: ${delay}`);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        return resolve({ position, delay });\n      } else {\n        return reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onResolve({ position, delay }) {\n  return Notify.success(`✅ Fulfilled promise ${position} in ${delay}`, opt);\n}\n\nfunction onCatch({ position, delay }) {\n  return Notify.failure(`❌ Rejected promise ${position} in ${delay}`, opt);\n}\n\nconst opt = {\n  timeout: 5000,\n  fontSize: '14px',\n  cssAnimationDuration: 500,\n  cssAnimationStyle: 'zoom',\n  // closeButton: true,\n};\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","console","log","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onResolve","Notify","success","$47d4ff9957288465$var$opt","$47d4ff9957288465$var$onCatch","failure","document","querySelector","addEventListener","e","preventDefault","result","FormData","target","forEach","value","name","Number","step","amount","then","catch","timeout","fontSize","cssAnimationDuration","cssAnimationStyle"],"version":3,"file":"03-promises.e4f6b81a.js.map"}